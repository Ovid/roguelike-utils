#!/usr/bin/env perl

# vim: ft=perl

use strict;
use warnings;

use Getopt::Long;

my $opt_console = $^O =~ /win32/i ? 'win32' : 'curses';

GetOptions( "console=s" => \$opt_console );

my $con;

if ( $opt_console eq 'curses' ) {
    require Games::Roguelike::Console::Curses;
    $con = Games::Roguelike::Console::Curses->new();
}
elsif ( $opt_console eq 'win32' ) {
    require Games::Roguelike::Console::Win32;
    $con = Games::Roguelike::Console::Win32->new();
}
elsif ( $opt_console eq 'ansi' ) {
    require Games::Roguelike::Console::ANSI;
    $con = Games::Roguelike::Console::ANSI->new();
}
else {
    die "Unknown console: '$opt_console'";
}

$con->tagstr( 3, 4,
    "This is normal <red>and this is red <green>and this is green" );
$con->refresh();
$con->getch();

__END__

=head1 NAME

testtag - Attempt to display text with color codes (see C<tagstr> method)

=head1 SYNOPSIS

  perl scripts/testtag --console curses
  perl scripts/testtag --console win32
  perl scripts/testtag --console ansi

If you do not pass the C<--console> option, testtag will attempt to infer your
console from the C<$^O> (operating system name) variable.
